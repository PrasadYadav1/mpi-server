{
  "swagger": "2.0",
  "basePath": "/api",
  "tags": [
    {
      "name": "MPI API",
      "description": ""
    }
  ],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "paths": {
    "/token": {
      "post": {
        "tags": ["User"],
        "description": "Authenticates the user and provides token for the session if authentication is successful",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Authenticate user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "token response",
            "schema": {
              "$ref": "#/definitions/tokenResponse"
            }
          }
        }
      }
    },
    "/users?{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["User"],
        "description": "Get All users ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "userName",
              "firstName",
              "lastName",
              "email",
              "designation",
              "mobileNumber"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          }
        }
      }
    },
    "/users/list?{pageIndex}&{pageSize}/{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["User"],
        "summary": "Get list of users with pagination for the logged in user",
        "description": "only accessible to Admin & Managers",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "page index",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "page size",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "userName",
              "firstName",
              "lastName",
              "email",
              "designation",
              "mobileNumber"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/userListResponse"
            }
          }
        }
      }
    },
    "/users/profileimage/{userId}": {
      "put": {
        "tags": ["User"],
        "description": "Upload User Profile Image",
        "consumes": ["multipart/form-data"],
        "operationId": "for the URL",
        "paramType": "form",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "1",
            "required": true,
            "type": "integer"
          },
          {
            "name": "file",
            "in": "formData",
            "paramType": "form",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/{userId}/assignManager": {
      "put": {
        "tags": ["User"],
        "summary": "Assign manager to sales agent",
        "description": "only admin can assign",
        "consumes": ["application/json"],
        "operationId": "for the URL",
        "paramType": "form",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "sales agent id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "manager id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/assignManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/{userId}/changeStatus": {
      "put": {
        "tags": ["User"],
        "summary": "Activate or Deactivate user",
        "description": "only admin have permissions",
        "consumes": ["application/json"],
        "operationId": "for the URL",
        "paramType": "form",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "sales agent id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": true,
            "type": "string",
            "enum": ["Activate", "Deactivate"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/assign/manager/{managerId}/agentsTo/newManager/{newManagerId}": {
      "put": {
        "tags": ["User"],
        "summary": "Assign manager sales agents to new manager",
        "description": "only admin can assign",
        "consumes": ["application/json"],
        "operationId": "for the URL",
        "paramType": "form",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "managerId",
            "in": "path",
            "description": "manager id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "newManagerId",
            "in": "path",
            "description": "new manager id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/locations?{searchBy}&{searchByValue}": {
      "get": {
        "tags": ["User"],
        "summary": "Get logged in manager users locations",
        "description": "only accessible to manager role, when searchBy is selected, search by value required else 400 will be thrown",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "searchBy",
            "in": "query",
            "enum": ["firstName", "lastName"],
            "description": "searchBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchByValue",
            "in": "query",
            "description": "searchByValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/userLocations"
            }
          }
        }
      }
    },
    "/users/{userId}/locations": {
      "get": {
        "tags": ["User"],
        "summary": "Get logged in manager selected user locations of the day",
        "description": "only accessible to manager role, if user is not found 404 will be thrown",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/selectedUserLocations"
            }
          }
        }
      }
    },
    "/users/{userId}/last/location": {
      "get": {
        "tags": ["User"],
        "summary": "Get logged in manager selected user last location",
        "description": "only accessible to manager role, if user is not found or last location is not found 404 will be thrown",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/lastLocation"
            }
          }
        }
      }
    },
    "/users/{userId}/details": {
      "get": {
        "tags": ["User"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "schema": {
              "$ref": "#/definitions/userDetails"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "update user",
        "description": "only accessible to Admin",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users update response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/lastLocations": {
      "get": {
        "tags": ["User"],
        "summary": "Get last location of  each user who are under logged in user",
        "description": "only accessible to manager,admin roles",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/usersLastLocations"
            }
          }
        }
      }
    },
    "/users/{type}": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users if user is admin else gets users under manager",
        "description": "only accessible to manager,admin roles",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "type": "string",
            "enum": ["All", "ZonalManager", "RegionalManager", "SalesAgent"],
            "required": true
          },
          {
            "name": "searchText",
            "in": "query",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "userStatus",
            "in": "query",
            "description": "",
            "type": "string",
            "required": false,
            "enum": ["All", "Active", "Deactive"]
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/headusers/{type}": {
      "get": {
        "tags": ["User"],
        "summary": "Get all head users ",
        "description": "only accessible to ZonalManager,RegionalManager,SalesAgent roles",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "type",
            "in": "path",
            "description": "",
            "type": "string",
            "enum": ["--", "ZonalManager", "RegionalManager", "SalesAgent"],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Users response",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{userId}/assing/warehouse": {
      "put": {
        "tags": ["User"],
        "summary": "assing warehouse  by userId",
        "description": "only assign by Admin",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAssingWarehouse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assing Branch and customer",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/{userId}/assing/branch": {
      "put": {
        "tags": ["User"],
        "summary": "assing Branch  by userId",
        "description": "only accessible to Admin",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAssingBranch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assing Branch",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/users/{userId}/assing/branch/customer": {
      "put": {
        "tags": ["User"],
        "summary": "assing Branch and customer by userId",
        "description": "only accessible to Admin",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAssingBranchCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assing Branch and customer",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/companies?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Company"],
        "description": "Get All Companies",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "buildingName",
              "city",
              "province",
              "areaCode",
              "phoneNumber",
              "primaryContactPerson",
              "primaryContactNumber",
              "secondaryContactPerson",
              "secondaryContactNumber",
              "address"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Company response",
            "schema": {
              "$ref": "#/definitions/companyResponseWithPagination"
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "tags": ["Company"],
        "description": "Create new company",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company response",
            "schema": {
              "$ref": "#/definitions/companyData"
            }
          }
        }
      }
    },
    "/companies/{id}/details": {
      "get": {
        "tags": ["Company"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Company response",
            "schema": {
              "$ref": "#/definitions/companyData"
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "put": {
        "tags": ["Company"],
        "description": "Update Company",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "company",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/companies/{companyId}": {
      "delete": {
        "tags": ["Company"],
        "description": "delete the comapny by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "companyId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/customers?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Customer"],
        "description": "Get All Customers",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "customerType",
              "buildingName",
              "city",
              "province",
              "areaCode",
              "phoneNumber",
              "primaryContactPerson",
              "primaryContactNumber",
              "secondaryContactPerson",
              "secondaryContactNumber",
              "address"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "$ref": "#/definitions/customerResponseWithPagination"
            }
          }
        }
      }
    },
    "/customers/all?{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Customer"],
        "description": "Get All Customer ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "customerType",
              "buildingName",
              "city",
              "province",
              "areaCode",
              "phoneNumber",
              "primaryContactPerson",
              "primaryContactNumber",
              "secondaryContactPerson",
              "secondaryContactNumber",
              "address"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "$ref": "#/definitions/customerResponse"
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": ["Customer"],
        "description": "Create new Customer",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "$ref": "#/definitions/customerData"
            }
          }
        }
      }
    },
    "/customers/{id}/details": {
      "get": {
        "tags": ["Customer"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "$ref": "#/definitions/customerData"
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "put": {
        "tags": ["Customer"],
        "description": "Update Customer",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/customers/{id}/branch": {
      "put": {
        "tags": ["Customer"],
        "description": "Assign branch",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerBranch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/customers/{warehouseId}/all": {
      "get": {
        "tags": ["Customer"],
        "description": "get all Customers by branch id",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "warehouseId",
            "in": "path",
            "description": "warehouseId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/categoryresponse"
              }
            }
          }
        }
      }
    },
    "/customers/{coustmerId}": {
      "delete": {
        "tags": ["Customer"],
        "description": "delete the Customer by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "coustmerId",
            "in": "path",
            "description": "coustmerId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["category"],
        "description": "Create new category",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "category response",
            "schema": {
              "$ref": "#/definitions/category"
            }
          }
        }
      }
    },
    "/categories/all": {
      "get": {
        "tags": ["category"],
        "description": "get all categories",
        "operationId": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/categoryresponse"
              }
            }
          }
        }
      }
    },
    "/categories/subcategories": {
      "post": {
        "tags": ["category"],
        "description": "Create new subcategory",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "subcategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subcategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "category response",
            "schema": {
              "$ref": "#/definitions/subcategory"
            }
          }
        }
      }
    },
    "/categories/{id}/subcategories": {
      "get": {
        "tags": ["category"],
        "description": "get all subcategories by category id",
        "operationId": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/subcategoryresponse"
              }
            }
          }
        }
      }
    },
    "/unitsofmeasurements": {
      "post": {
        "tags": ["Units of measurement"],
        "description": "Create new unitsofmeasurement",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Units of measurement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/unitsofMeasurement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Units of measurement response",
            "schema": {
              "$ref": "#/definitions/unitsofMeasurements"
            }
          }
        }
      }
    },
    "/unitsofmeasurements/all": {
      "get": {
        "tags": ["Units of measurement"],
        "description": "get all unitsofmeasurements",
        "operationId": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/unitsofmeasurementResponse"
              }
            }
          }
        }
      }
    },
    "/unitsofmeasurements/{id}/details": {
      "get": {
        "tags": ["Units of measurement"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Units of Measurement response",
            "schema": {
              "$ref": "#/definitions/unitsofMeasurements"
            }
          }
        }
      }
    },
    "/unitsofmeasurements/{id}": {
      "put": {
        "tags": ["Units of measurement"],
        "description": "Update unitsofmeasurement",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "unitsofmeasurement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/unitsofMeasurement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "unitsofmeasurement response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/unitsofmeasurements/{uId}": {
      "delete": {
        "tags": ["Units of measurement"],
        "description": "delete the unitsofmeasurement by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "uId",
            "in": "path",
            "description": "uId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/products?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Product"],
        "description": "Get All Product --> classificationName(ALKES,ETHICAL,OTC,GENGIGEL,CITREX,PELANGI,VITABIOTICS,UPIN IPIN,OTHERS,OGB,VIVO)",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "classificationName",
              "companyId",
              "categoryId",
              "subCategoryId",
              "units",
              "unitsofMeasurement"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productResponseWithPagination"
            }
          }
        }
      }
    },
    "/products/preorder?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Product"],
        "description": "Get All Product, classificationName(ALKES,ETHICAL,OTC,GENGIGEL,CITREX,PELANGI,VITABIOTICS,UPIN IPIN,OTHERS,OGB,VIVO)",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "classificationName",
              "companyId",
              "categoryId",
              "subCategoryId",
              "units",
              "unitsofMeasurement"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productPreOrderResponseWithPagination"
            }
          }
        }
      }
    },
    "/products/all/categories": {
      "get": {
        "tags": ["Product"],
        "description": "Get All Product by categories",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productCategories"
            }
          }
        }
      }
    },
    "/products/all/companies": {
      "get": {
        "tags": ["Product"],
        "description": "Get All Product by companies",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productCompanies"
            }
          }
        }
      }
    },
    "/products/all?{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Product"],
        "description": "Get All Product ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "classificationName",
              "companyName",
              "injectionType",
              "formType",
              "packSize",
              "dosageValue",
              "dosageType"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productsResponse"
            }
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": ["Product"],
        "description": "Create new Product,injectionType(Oral, Rectal),formType(Tablet, capsule, suspension, softgel),classificationName(ALKES,ETHICAL,OTC,GENGIGEL,CITREX,PELANGI,VITABIOTICS,UPIN IPIN,OTHERS,OGB,VIVO) ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/products"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/products/{productId}/details": {
      "get": {
        "tags": ["Product"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productsp"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "tags": ["Product"],
        "description": "Update Product",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/products"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "delete": {
        "tags": ["Product"],
        "description": "delete the Product by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/products/{productId}/priceCatalogue": {
      "get": {
        "tags": ["Product"],
        "description": "get product price catalogue ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/priceCatalogueByProduct"
            }
          }
        }
      }
    },
    "/productprices?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["ProductPrice"],
        "description": "Get All ProductPrice ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": ["productId", "fromRange", "toRange", "price"],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Price response",
            "schema": {
              "$ref": "#/definitions/productPriceWithPagination"
            }
          }
        }
      }
    },
    "/productprices": {
      "post": {
        "tags": ["ProductPrice"],
        "description": "Create new ProductPrice",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "product price",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productPrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product response",
            "schema": {
              "$ref": "#/definitions/productPrice"
            }
          }
        }
      }
    },
    "/productprices/{id}/details": {
      "get": {
        "tags": ["ProductPrice"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Price response",
            "schema": {
              "$ref": "#/definitions/productPrice"
            }
          }
        }
      }
    },
    "/productprices/{id}/product/{quantity}/range": {
      "get": {
        "tags": ["ProductPrice"],
        "description": "get quantity range and price by quantity, if no range 404 will be thrown",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "quantity",
            "in": "path",
            "description": "quantity",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/productPriceQuantityRangeByQuantity"
            }
          }
        }
      }
    },
    "/productprices/{id}": {
      "put": {
        "tags": ["ProductPrice"],
        "description": "Update ProductPrice",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/productPrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductPrice response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/productprices/{productPriceId}": {
      "delete": {
        "tags": ["ProductPrice"],
        "description": "delete the ProductPrice by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "productPriceId",
            "in": "path",
            "description": "productPriceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/warehouses?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Warehouse"],
        "description": "Get All Warehouses",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "name",
              "email",
              "phoneNumber",
              "warehouseType",
              "province",
              "address",
              "areaCode",
              "buildingName",
              "city"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse response",
            "schema": {
              "$ref": "#/definitions/warehouseResponseWithPagination"
            }
          }
        }
      }
    },
    "/warehouses/all": {
      "get": {
        "tags": ["Warehouse"],
        "description": "get all Warehouses",
        "operationId": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/categoryresponse"
              }
            }
          }
        }
      }
    },
    "/warehouses": {
      "post": {
        "tags": ["Warehouse"],
        "description": "Create new Warehouse,  warehouseType:(Primary, Secondary)",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Warehouse",
            "required": true,
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse response",
            "schema": {
              "$ref": "#/definitions/warehouseData"
            }
          }
        }
      }
    },
    "/warehouses/{id}/details": {
      "get": {
        "tags": ["Warehouse"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse response",
            "schema": {
              "$ref": "#/definitions/warehouseData"
            }
          }
        }
      }
    },
    "/warehouses/{id}": {
      "put": {
        "tags": ["Warehouse"],
        "description": "Update Warehouse warehouseType:(Primary, Secondary)",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Warehouse",
            "required": true,
            "schema": {
              "$ref": "#/definitions/warehouse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/warehouses/{warehouseId}": {
      "delete": {
        "tags": ["Warehouse"],
        "description": "delete the Warehouse by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "warehouseId",
            "in": "path",
            "description": "warehouseId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/warehouses/branches": {
      "get": {
        "tags": ["Warehouse"],
        "description": "get all branches",
        "operationId": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/categoryresponse"
              }
            }
          }
        }
      }
    },
    "/warehouses/{primaryWarehouseId}/branches": {
      "get": {
        "tags": ["Warehouse"],
        "description": "get all branches by primaryWarehouseId",
        "operationId": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "primaryWarehouseId",
            "in": "path",
            "description": "primaryWarehouseId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/warehouseData"
              }
            }
          }
        }
      }
    },
    "/inventories?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Inventory"],
        "description": "Get All Inventory ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "grn",
              "inventoryDate",
              "warehouseId",
              "withPo",
              "orderNumber",
              "principalName"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory response",
            "schema": {
              "$ref": "#/definitions/inventoryResponseWithPagination"
            }
          }
        }
      }
    },
    "/inventories/all?{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Inventory"],
        "description": "Get All Inventory ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "grn",
              "inventoryDate",
              "warehouseId",
              "withPo",
              "orderNumber",
              "principalName"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory response",
            "schema": {
              "$ref": "#/definitions/inventoryResponse"
            }
          }
        }
      }
    },
    "/inventories": {
      "post": {
        "tags": ["Inventory"],
        "description": "Create new Inventory",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Inventory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory response",
            "schema": {
              "$ref": "#/definitions/inventoryData"
            }
          }
        }
      }
    },
    "/inventories/grn/{inventoryId}": {
      "get": {
        "tags": ["Inventory"],
        "description": "GRN Generation ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "inventoryId",
            "in": "path",
            "description": "inventoryId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/inventories/{inventoryId}/details": {
      "get": {
        "tags": ["Inventory"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "inventoryId",
            "in": "path",
            "description": "inventoryId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory response",
            "schema": {
              "$ref": "#/definitions/inventoryDetails"
            }
          }
        }
      }
    },
    "/inventories/{inventoryId}/stockreceiveds": {
      "get": {
        "tags": ["Inventory"],
        "description": "get stockreceived ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "inventoryId",
            "in": "path",
            "description": "inventoryId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Stockreceived response",
            "schema": {
              "$ref": "#/definitions/stockReceivedListData"
            }
          }
        }
      }
    },
    "/inventories/stockreceiveds/{productId}": {
      "get": {
        "tags": ["Inventory"],
        "description": "get stockreceived ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Stockreceived response",
            "schema": {
              "$ref": "#/definitions/stockReceivedListData"
            }
          }
        }
      }
    },
    "/inventories/{productId}/stockreceiveds/{batchNumber}": {
      "get": {
        "tags": ["Inventory"],
        "description": "get stockreceived ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "batchNumber",
            "in": "path",
            "description": "batchNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Stockreceived response",
            "schema": {
              "$ref": "#/definitions/stockReceivedListData"
            }
          }
        }
      }
    },
    "/stockreceived": {
      "post": {
        "tags": ["StockReceived"],
        "description": "Create new stockreceived",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "stockreceived",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stockReceivedData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "stockreceived response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/stockreceived/{id}": {
      "put": {
        "tags": ["StockReceived"],
        "description": "Update StockReceived",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "StockReceived",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stockReceivedData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "StockReceived response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/stockreceived/{stockReceivedId}": {
      "delete": {
        "tags": ["StockReceived"],
        "description": "delete the StockReceived by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "stockReceivedId",
            "in": "path",
            "description": "stockReceivedId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/offers?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Offer"],
        "description": "Get All Offers ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": ["offerDate", "productId", "offerType"],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Offer response",
            "schema": {
              "$ref": "#/definitions/offerWithPagination"
            }
          }
        }
      }
    },
    "/offers/images/upload": {
      "post": {
        "tags": ["Offer"],
        "description": "Upload Offer Image",
        "consumes": ["multipart/form-data"],
        "operationId": "for the URL",
        "paramType": "form",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "paramType": "form",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "offer Response",
            "schema": {
              "$ref": "#/definitions/offerImages1"
            }
          }
        }
      }
    },
    "/offers": {
      "post": {
        "tags": ["Offer"],
        "description": "Create new Offer",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "offer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offerp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer response",
            "schema": {
              "$ref": "#/definitions/offer"
            }
          }
        }
      }
    },
    "/offers/{id}/details": {
      "get": {
        "tags": ["Offer"],
        "description": "get by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Offer response",
            "schema": {
              "$ref": "#/definitions/offer"
            }
          }
        }
      }
    },
    "/offers/{id}": {
      "put": {
        "tags": ["Offer"],
        "description": "Update Offer",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Offer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offerp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/offers/{offerId}": {
      "delete": {
        "tags": ["Offer"],
        "description": "delete the offer by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "offerId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/offers/{offerId}/offerdiscounts": {
      "post": {
        "tags": ["Offer"],
        "description": "Create  offer discounts for products",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "offerId",
            "in": "path",
            "description": "offerId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "offer discounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offerDiscountP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offer discounts response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/offers/{id}/offerdiscounts": {
      "put": {
        "tags": ["Offer"],
        "description": "Update offer discounts ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": " offer discounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offerDiscountP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "offer discounts response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/offers/{offerdiscountsId}/offerdiscounts": {
      "delete": {
        "tags": ["Offer"],
        "description": "delete the offerDiscounts by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "offerdiscountsId",
            "in": "path",
            "description": "offerdiscountsId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/preorders?pageIndex={pageIndex}&pageSize={pageSize}&{orderBy}&{fromDate}&{toDate}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["PreOrder"],
        "description": "Get All Transaction ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "enum": ["DESC", "ASC"],
            "description": "order By",
            "required": false,
            "type": "String"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate(2017-01-01) (dateOfDelivery)",
            "required": false,
            "type": "String"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate(2018-01-01) (dateOfDelivery)",
            "required": false,
            "type": "String"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "preOrderNumber",
              "customerId",
              "dateOfDelivery",
              "discount",
              "totalAmount"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "preorder  response",
            "schema": {
              "$ref": "#/definitions/preOrderListData"
            }
          }
        }
      }
    },
    "/preorders": {
      "post": {
        "tags": ["PreOrder"],
        "description": "Create new PreOrder",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "PreOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/preOrderData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PreOrder response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/preorders/{prOrderId}": {
      "get": {
        "tags": ["PreOrder"],
        "description": "get preorderConfirmed",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "prOrderId",
            "in": "path",
            "description": "prOrderId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "Ok"
            }
          }
        }
      }
    },
    "/preorders/{id}/details": {
      "get": {
        "tags": ["PreOrder"],
        "description": "get preorders ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "preorders response",
            "schema": {
              "$ref": "#/definitions/preOrderDetails"
            }
          }
        }
      }
    },
    "/preorders/{id}": {
      "put": {
        "tags": ["PreOrder"],
        "description": "Update PreOrder",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "PreOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/preOrderData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PreOrder response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/preorders/isapproved/{id}": {
      "put": {
        "tags": ["PreOrder"],
        "description": "PreOrder is approved or not",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "PreOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/isApproved"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PreOrder response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/preorders/{id}/digitalsignature": {
      "put": {
        "tags": ["PreOrder"],
        "description": "Update PreOrder",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "PreOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/digitalSignature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PreOrder response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/preorders/{preOrderId}": {
      "delete": {
        "tags": ["PreOrder"],
        "description": "delete the PreOrder by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "preOrderId",
            "in": "path",
            "description": "preOrderId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/preorders/{preorderId}/preorderproducts": {
      "post": {
        "tags": ["PreOrder"],
        "description": "Create  preorder products ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "preorderId",
            "in": "path",
            "description": "preorderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Preorder Products",
            "required": true,
            "schema": {
              "$ref": "#/definitions/preorderProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "preorder products response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/preorders/{id}/preorderproducts": {
      "put": {
        "tags": ["PreOrder"],
        "description": "Update  preorder products ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Preorder Products",
            "required": true,
            "schema": {
              "$ref": "#/definitions/preorderProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "preorder products response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/preorders/{preOrderProductId}/preorderproducts": {
      "delete": {
        "tags": ["PreOrder"],
        "description": "delete the preOrderProduct by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "preOrderProductId",
            "in": "path",
            "description": "preOrderProductId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/orders?pageIndex={pageIndex}&pageSize={pageSize}&{orderBy}&{fromDate}&{toDate}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Order"],
        "description": "Get All Transaction ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "enum": ["DESC", "ASC"],
            "description": "order By",
            "required": false,
            "type": "String"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate(2017-01-01) (dateOfDelivery)",
            "required": false,
            "type": "String"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate(2018-01-01) (dateOfDelivery)",
            "required": false,
            "type": "String"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "orderNumber",
              "customerId",
              "dateOfDelivery",
              "discount",
              "totalAmount"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "order  response",
            "schema": {
              "$ref": "#/definitions/orderListData"
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": ["Order"],
        "description": "Create new Order",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/orders/{id}/details": {
      "get": {
        "tags": ["Order"],
        "description": "get orders ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "orders response",
            "schema": {
              "$ref": "#/definitions/orderDetails"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "put": {
        "tags": ["Order"],
        "description": "Update Order",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/orders/isapproved/{id}": {
      "put": {
        "tags": ["Order"],
        "description": "Order is approved or not",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/isApproved"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "delete": {
        "tags": ["Order"],
        "description": "delete the order by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/orders/{orderId}/orderproducts": {
      "post": {
        "tags": ["Order"],
        "description": "create  order products ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "order Products",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "order products response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/orders/{id}/orderproducts": {
      "put": {
        "tags": ["Order"],
        "description": "Update  order products ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "order Products",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orderProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "order products response",
            "schema": {
              "$ref": "#/definitions/successMessageResponse"
            }
          }
        }
      }
    },
    "/orders/{orderProductId}/orderproducts": {
      "delete": {
        "tags": ["Order"],
        "description": "delete the orderProduct by id ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "orderProductId",
            "in": "path",
            "description": "orderProductId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },
    "/orders/{id}/invoice": {
      "get": {
        "tags": ["Order"],
        "description": "get orders invoice ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/orders/invoice?pageIndex={pageIndex}&pageSize={pageSize}&{orderBy}&{fromDate}&{toDate}&{propertyName}&{propertyValue}": {
      "get": {
        "tags": ["Order"],
        "description": "Get All Invoice ",
        "operationId": "for the URL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "bearer token",
            "required": true
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "PageIndex",
            "required": true,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "PageSize",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "enum": ["DESC", "ASC"],
            "description": "order By",
            "required": false,
            "type": "String"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate(2017-01-01) (dateOfDelivery)",
            "required": false,
            "type": "String"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate(2018-01-01) (dateOfDelivery)",
            "required": false,
            "type": "String"
          },
          {
            "name": "propertyName",
            "in": "query",
            "enum": [
              "orderNumber",
              "customerId",
              "dateOfDelivery",
              "discount",
              "totalAmount"
            ],
            "description": "PropertyName",
            "required": false,
            "type": "string"
          },
          {
            "name": "propertyValue",
            "in": "query",
            "description": "propertyValue",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "order  response",
            "schema": {
              "$ref": "#/definitions/orderListData"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "successMessageResponse": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "token": {
      "properties": {
        "email": {
          "required": true,
          "type": "string",
          "example": "krish@gmail.com"
        },
        "password": {
          "required": true,
          "type": "string",
          "example": "Design_20"
        }
      }
    },
    "tokenResponse": {
      "properties": {
        "token": {
          "required": true,
          "type": "string"
        },
        "user": {
          "title": "User",
          "type": "object",
          "properties": {
            "id": {
              "required": true,
              "type": "integer",
              "example": 1
            },
            "userName": {
              "required": true,
              "type": "string"
            },
            "firstName": {
              "required": true,
              "type": "string"
            },
            "lastName": {
              "required": true,
              "type": "string",
              "example": "abc@gmail.com"
            },
            "email": {
              "required": true,
              "type": "string"
            },
            "userRole": {
              "required": true,
              "type": "string"
            },
            "designation": {
              "required": true,
              "type": "string"
            },
            "avatar": {
              "required": true,
              "type": "string"
            },
            "mobileNumber": {
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "user": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string"
        },
        "firstName": {
          "required": true,
          "type": "string"
        },
        "lastName": {
          "required": true,
          "type": "string",
          "example": "abc@gmail.com"
        },
        "email": {
          "required": true,
          "type": "string"
        },
        "userRole": {
          "required": true,
          "type": "string"
        },
        "designation": {
          "required": true,
          "type": "string"
        },
        "avatar": {
          "required": true,
          "type": "string"
        },
        "mobileNumber": {
          "required": true,
          "type": "string"
        },
        "target": {
          "required": false,
          "type": "number"
        },
        "supervisior": {
          "required": false,
          "type": "string"
        },
        "dateOfJoin": {
          "required": true,
          "type": "string",
          "example": "2019-02-01"
        },
        "employeeId": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "isActive": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "deactivatedDate": {
          "required": false,
          "type": "string",
          "example": "2018-01-10"
        },
        "hasAgents": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "warehouseId": {
          "required": false,
          "type": "integer",
          "example": 1
        },
        "warehouseName": {
          "required": false,
          "type": "string",
          "example": "warehouseName"
        },
        "branchId": {
          "required": false,
          "type": "integer",
          "example": 1
        },
        "branchName": {
          "required": false,
          "type": "string",
          "example": "branchName"
        },
        "customerIds": {
          "required": true,
          "type": "array",
          "example": [1]
        }
      }
    },
    "userDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "firstName": {
          "required": true,
          "type": "string"
        },
        "lastName": {
          "required": true,
          "type": "string",
          "example": "abc@gmail.com"
        },
        "email": {
          "required": true,
          "type": "string"
        },
        "userName": {
          "required": true,
          "type": "string"
        },
        "userRole": {
          "required": true,
          "type": "string"
        },
        "designation": {
          "required": true,
          "type": "string"
        },
        "avatar": {
          "required": true,
          "type": "string"
        },
        "mobileNumber": {
          "required": true,
          "type": "string"
        },
        "address": {
          "required": false,
          "type": "string"
        },
        "dateOfJoin": {
          "required": true,
          "type": "string",
          "example": "2019-02-01"
        },
        "employeeId": {
          "required": true,
          "type": "string",
          "example": ""
        }
      }
    },
    "userResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/user"
      }
    },
    "userListResponse": {
      "properties": {
        "count": {
          "type": "integer",
          "required": true
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user"
          }
        }
      }
    },
    "usersLocation": {
      "properties": {
        "userId": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "id": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        },
        "createdAt": {
          "required": true,
          "type": "string",
          "example": "2019-02-02T10:18:16.397Z"
        }
      }
    },
    "assignManager": {
      "properties": {
        "managerId": {
          "type": "integer",
          "required": true
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "required": true,
            "type": "integer"
          },
          "firstName": {
            "required": true,
            "type": "string"
          },
          "lastName": {
            "required": true,
            "type": "string"
          },
          "userRole": {
            "required": true,
            "type": "string"
          }
        }
      }
    },
    "userUpdate": {
      "properties": {
        "firstName": {
          "type": "string",
          "required": true
        },
        "lastName": {
          "type": "string",
          "required": true
        },
        "email": {
          "type": "string",
          "required": true
        },
        "userName": {
          "type": "string",
          "required": true
        },
        "employeeId": {
          "type": "string",
          "required": true
        },
        "mobileNumber": {
          "type": "string",
          "required": true
        },
        "dateOfJoin": {
          "type": "string",
          "required": true
        }
      }
    },
    "userAssingWarehouse": {
      "properties": {
        "warehouseId": {
          "required": true,
          "type": "number",
          "example": 1
        }
      }
    },
    "userAssingBranch": {
      "properties": {
        "warehouseId": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "branchId": {
          "required": true,
          "type": "number",
          "example": 1
        }
      }
    },
    "userAssingBranchCustomer": {
      "properties": {
        "warehouseId": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "branchId": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "customerIds": {
          "required": true,
          "type": "array",
          "example": [1, 2]
        }
      }
    },
    "userLocations": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "required": true,
            "type": "number",
            "example": 1
          },
          "firstName": {
            "required": true,
            "type": "string",
            "example": "john"
          },
          "lastName": {
            "required": true,
            "type": "string",
            "example": "john"
          },
          "avatar": {
            "required": true,
            "type": "string",
            "example": ""
          },
          "email": {
            "required": true,
            "type": "string",
            "example": "john"
          },
          "userRole": {
            "required": true,
            "type": "string",
            "example": ""
          },
          "locations": {
            "required": true,
            "type": "array",
            "items": {
              "$ref": "#/definitions/usersLocation"
            }
          }
        }
      }
    },
    "usersLastLocations": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "type": "integer",
            "required": true
          },
          "userName": {
            "type": "string",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "latitude": {
            "type": "number",
            "required": true
          },
          "longitude": {
            "type": "number",
            "required": true
          },
          "locationDateTime": {
            "type": "string",
            "required": true,
            "example": "2019-02-21 07:52:01.747+00"
          }
        }
      }
    },
    "selectedUserLocations": {
      "properties": {
        "id": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "firstName": {
          "required": true,
          "type": "string",
          "example": "john"
        },
        "lastName": {
          "required": true,
          "type": "string",
          "example": "john"
        },
        "avatar": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "email": {
          "required": true,
          "type": "string",
          "example": "john"
        },
        "userRole": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "locations": {
          "required": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/usersLocation"
          }
        }
      }
    },
    "lastLocation": {
      "properties": {
        "id": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        },
        "createdAt": {
          "required": true,
          "type": "string",
          "example": "2019-02-02T10:18:16.397Z"
        }
      }
    },
    "company": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "buildingName": {
          "required": true,
          "type": "string",
          "example": "buildingName"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "city"
        },
        "province": {
          "required": true,
          "type": "string",
          "example": "province"
        },
        "areaCode": {
          "required": true,
          "type": "string",
          "example": "areaCode"
        },
        "phoneNumber": {
          "required": true,
          "type": "string",
          "example": "phoneNumber"
        },
        "primaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "primaryContactPerson"
        },
        "primaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "primaryContactNumber"
        },
        "primaryEmail": {
          "required": true,
          "type": "string",
          "example": "inturi99@gmail.com"
        },
        "secondaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "secondaryContactPerson"
        },
        "secondaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "secondaryContactNumber"
        },
        "secondaryEmail": {
          "required": true,
          "type": "string",
          "example": "krishna@gmail.com"
        },
        "address": {
          "required": true,
          "type": "string",
          "example": "address"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        }
      }
    },
    "companyData": {
      "properties": {
        "id": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "buildingName": {
          "required": true,
          "type": "string",
          "example": "buildingName"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "city"
        },
        "province": {
          "required": true,
          "type": "string",
          "example": "province"
        },
        "areaCode": {
          "required": true,
          "type": "string",
          "example": "areaCode"
        },
        "phoneNumber": {
          "required": true,
          "type": "string",
          "example": "phoneNumber"
        },
        "primaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "primaryContactPerson"
        },
        "primaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "primaryContactNumber"
        },
        "primaryEmail": {
          "required": true,
          "type": "string",
          "example": "inturi99@gmail.com"
        },
        "secondaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "secondaryContactPerson"
        },
        "secondaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "secondaryContactNumber"
        },
        "secondaryEmail": {
          "required": true,
          "type": "string",
          "example": "krishna@gmail.com"
        },
        "address": {
          "required": true,
          "type": "string",
          "example": "address"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        },
        "updatedBy": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "required": true,
          "type": "string",
          "example": "2019-02-02T10:18:16.397Z"
        }
      }
    },
    "companyResponseWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/companyData"
          }
        }
      }
    },
    "companyResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/companyData"
      }
    },
    "customer": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "warehouseId": {
          "required": true,
          "type": "number",
          "example": null
        },
        "customerType": {
          "required": true,
          "type": "string",
          "example": "customerType"
        },
        "buildingName": {
          "required": true,
          "type": "string",
          "example": "buildingName"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "city"
        },
        "province": {
          "required": true,
          "type": "string",
          "example": "province"
        },
        "areaCode": {
          "required": true,
          "type": "string",
          "example": "areaCode"
        },
        "phoneNumber": {
          "required": true,
          "type": "string",
          "example": "phoneNumber"
        },
        "primaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "primaryContactPerson"
        },
        "primaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "primaryContactNumber"
        },
        "primaryEmail": {
          "required": true,
          "type": "string",
          "example": "inturi99@gmail.com"
        },
        "secondaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "secondaryContactPerson"
        },
        "secondaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "secondaryContactNumber"
        },
        "secondaryEmail": {
          "required": true,
          "type": "string",
          "example": "krishna@gmail.com"
        },
        "address": {
          "required": true,
          "type": "string",
          "example": "address"
        },
        "creditLimit": {
          "required": true,
          "type": "number",
          "example": 200.0
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        }
      }
    },
    "customerBranch": {
      "properties": {
        "warehouseId": {
          "required": true,
          "type": "number",
          "example": 1
        }
      }
    },
    "customerData": {
      "properties": {
        "id": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "warehouseId": {
          "required": true,
          "type": "number",
          "example": null
        },
        "warehouseName": {
          "required": true,
          "type": "string",
          "example": null
        },
        "customerType": {
          "required": true,
          "type": "string",
          "example": "customerType"
        },
        "buildingName": {
          "required": true,
          "type": "string",
          "example": "buildingName"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "city"
        },
        "province": {
          "required": true,
          "type": "string",
          "example": "province"
        },
        "areaCode": {
          "required": true,
          "type": "string",
          "example": "areaCode"
        },
        "phoneNumber": {
          "required": true,
          "type": "string",
          "example": "phoneNumber"
        },
        "primaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "primaryContactPerson"
        },
        "primaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "primaryContactNumber"
        },
        "primaryEmail": {
          "required": true,
          "type": "string",
          "example": "inturi99@gmail.com"
        },
        "secondaryContactPerson": {
          "required": true,
          "type": "string",
          "example": "secondaryContactPerson"
        },
        "secondaryContactNumber": {
          "required": true,
          "type": "string",
          "example": "secondaryContactNumber"
        },
        "secondaryEmail": {
          "required": true,
          "type": "string",
          "example": "krishna@gmail.com"
        },
        "address": {
          "required": true,
          "type": "string",
          "example": "address"
        },
        "creditLimit": {
          "required": true,
          "type": "number",
          "example": 200.0
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        },
        "updatedBy": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "required": true,
          "type": "string",
          "example": "2019-02-02T10:18:16.397Z"
        }
      }
    },
    "customerResponseWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerData"
          }
        }
      }
    },
    "customerResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/customerData"
      }
    },
    "categoryresponse": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": ""
        }
      }
    },
    "category": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "industry": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        }
      }
    },
    "subcategory": {
      "properties": {
        "categoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        }
      }
    },
    "subcategoryresponse": {
      "properties": {
        "categoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": ""
        }
      }
    },
    "unitsofmeasurementResponse": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": ""
        }
      }
    },
    "unitsofMeasurement": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "description": {
          "required": false,
          "type": "string",
          "example": "description"
        }
      }
    },
    "unitsofMeasurements": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "Combiflam"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        }
      }
    },
    "products": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "Combiflam"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "categoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "subCategoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "units": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "unitsofMeasurement": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        },
        "classificationName": {
          "required": true,
          "type": "string",
          "example": "classificationName"
        }
      }
    },
    "digitalSignature": {
      "properties": {
        "digitalSignature": {
          "required": true,
          "type": "file",
          "example": "base64String"
        }
      }
    },
    "productsp": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "Combiflam"
        },
        "productCode": {
          "required": true,
          "type": "string",
          "example": "productCode"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "companyName": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "categoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "categoryName": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "subCategoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "subCategoryName": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "units": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "unitsofMeasurement": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        },
        "classificationName": {
          "required": true,
          "type": "string",
          "example": "classificationName"
        }
      }
    },
    "productsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/productsp"
      }
    },
    "productCategories": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/productCategory"
      }
    },
    "productCategory": {
      "properties": {
        "categoryId": {
          "required": true,
          "type": "integer",
          "example": 2
        },
        "categoryName": {
          "required": true,
          "type": "string",
          "example": "Pharmaceuticals"
        },
        "productCount": {
          "required": true,
          "type": "string",
          "example": "10"
        }
      }
    },
    "productCompanies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/productCompany"
      }
    },
    "productCompany": {
      "properties": {
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "companyName": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "productCount": {
          "required": true,
          "type": "string",
          "example": "10"
        }
      }
    },

    "productResponseWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productsp"
          }
        }
      }
    },
    "productsPO": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "Combiflam"
        },
        "productCode": {
          "required": true,
          "type": "string",
          "example": "productCode"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "companyName": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "categoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "categoryName": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "subCategoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "subCategoryName": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "units": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "unitsofMeasurement": {
          "required": true,
          "type": "string",
          "example": ""
        },
        "receivedQuantity": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "price": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "offerType": {
          "required": true,
          "type": "string",
          "example": "mg"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 1.1
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        },
        "classificationName": {
          "required": true,
          "type": "string",
          "example": "classificationName"
        }
      }
    },
    "productPreOrderResponseWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productsPO"
          }
        }
      }
    },
    "productPrice": {
      "properties": {
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "fromRange": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "toRange": {
          "required": true,
          "type": "integer",
          "example": 10
        },
        "price": {
          "required": true,
          "type": "double",
          "example": 2
        },
        "productName": {
          "required": true,
          "type": "string",
          "example": ""
        }
      }
    },
    "priceCatalogueByProduct": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "required": true,
            "type": "integer",
            "example": 1
          },
          "productId": {
            "required": true,
            "type": "integer",
            "example": 1
          },
          "productName": {
            "required": true,
            "type": "string",
            "example": ""
          },
          "fromRange": {
            "required": true,
            "type": "number",
            "example": 1
          },
          "toRange": {
            "required": true,
            "type": "number",
            "example": 100
          },
          "price": {
            "required": true,
            "type": "number",
            "example": 100.23
          }
        }
      }
    },
    "productPriceQuantityRangeByQuantity": {
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "fromRange": {
          "type": "integer",
          "required": true
        },
        "toRange": {
          "type": "integer",
          "required": true
        },
        "price": {
          "type": "number",
          "required": true
        }
      }
    },
    "productPriceWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productPrice"
          }
        }
      }
    },
    "warehouse": {
      "properties": {
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "email": {
          "required": true,
          "type": "string",
          "example": "inturi99@gmail.com"
        },
        "phoneNumber": {
          "required": true,
          "type": "string",
          "example": "phoneNumber"
        },
        "warehouseType": {
          "required": true,
          "type": "string",
          "example": "Primary"
        },
        "primaryWarehouseId": {
          "required": false,
          "type": "number",
          "example": null
        },
        "province": {
          "required": true,
          "type": "string",
          "example": "province"
        },
        "address": {
          "required": true,
          "type": "string",
          "example": "address"
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        },
        "areaCode": {
          "required": true,
          "type": "string",
          "example": "areaCode"
        },
        "buildingName": {
          "required": true,
          "type": "string",
          "example": "buildingName"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "city"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        }
      }
    },
    "warehouseData": {
      "properties": {
        "id": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "name": {
          "required": true,
          "type": "string",
          "example": "techno"
        },
        "email": {
          "required": true,
          "type": "string",
          "example": "inturi99@gmail.com"
        },
        "phoneNumber": {
          "required": true,
          "type": "string",
          "example": "phoneNumber"
        },
        "warehouseType": {
          "required": true,
          "type": "string",
          "example": "Primary"
        },
        "primaryWarehouseId": {
          "required": false,
          "type": "number",
          "example": null
        },
        "province": {
          "required": true,
          "type": "string",
          "example": "province"
        },
        "address": {
          "required": true,
          "type": "string",
          "example": "address"
        },
        "longitude": {
          "required": true,
          "type": "number",
          "example": 10.6758
        },
        "latitude": {
          "required": true,
          "type": "number",
          "example": -122.3445
        },
        "areaCode": {
          "required": true,
          "type": "string",
          "example": "areaCode"
        },
        "buildingName": {
          "required": true,
          "type": "string",
          "example": "buildingName"
        },
        "city": {
          "required": true,
          "type": "string",
          "example": "city"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "pharmacy"
        },
        "updatedBy": {
          "required": true,
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "required": true,
          "type": "string",
          "example": "2019-02-02T10:18:16.397Z"
        }
      }
    },
    "warehouseResponseWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/warehouseData"
          }
        }
      }
    },
    "warehouseResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/warehouseData"
      }
    },
    "stockReceiveds": {
      "properties": {
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "unitofMeasurement": {
          "required": true,
          "type": "string",
          "example": "unitofMeasurement"
        },
        "dateOfManufacture": {
          "required": true,
          "type": "date",
          "example": "2019-01-10"
        },
        "expiryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-12"
        },
        "receivedQuantity": {
          "required": true,
          "type": "double",
          "example": 10
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "price": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 120.0
        }
      }
    },
    "stockReceivedData": {
      "properties": {
        "inventoryId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "unitofMeasurement": {
          "required": true,
          "type": "string",
          "example": "unitofMeasurement"
        },
        "dateOfManufacture": {
          "required": true,
          "type": "date",
          "example": "2019-01-10"
        },
        "expiryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-12"
        },
        "receivedQuantity": {
          "required": true,
          "type": "double",
          "example": 10
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "price": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 120.0
        }
      }
    },
    "inventories": {
      "properties": {
        "inventoryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "warehouseId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "withPo": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "orderNumber": {
          "required": true,
          "type": "string",
          "example": "orderNumber"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        },
        "stockReceiveds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stockReceiveds"
          }
        }
      }
    },
    "stockReceivedDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productName": {
          "required": true,
          "type": "string",
          "example": "productName"
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "unitofMeasurement": {
          "required": true,
          "type": "string",
          "example": "unitofMeasurement"
        },
        "dateOfManufacture": {
          "required": true,
          "type": "date",
          "example": "2019-01-10"
        },
        "expiryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-12"
        },
        "receivedQuantity": {
          "required": true,
          "type": "double",
          "example": 10
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "price": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 120.0
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 2.0
        }
      }
    },
    "stockReceivedListData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/stockReceivedDetails"
      }
    },
    "inventoryDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "grn": {
          "required": true,
          "type": "string",
          "example": "GRN0001"
        },
        "isgrn": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "inventoryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "warehouseId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "withPo": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "orderNumber": {
          "required": true,
          "type": "string",
          "example": "orderNumber"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "companyName": {
          "required": true,
          "type": "string",
          "example": "companyName"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        },
        "stockReceiveds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stockReceivedDetails"
          }
        }
      }
    },
    "inventoryData": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "grn": {
          "required": true,
          "type": "string",
          "example": "GRN0001"
        },
        "isgrn": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "inventoryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "warehouseId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "withPo": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "orderNumber": {
          "required": true,
          "type": "string",
          "example": "orderNumber"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "companyName": {
          "required": true,
          "type": "string",
          "example": "companyName"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        }
      }
    },
    "inventoriesp": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "inventoryDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "warehouseId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "withPo": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "orderNumber": {
          "required": true,
          "type": "string",
          "example": "orderNumber"
        },
        "companyId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "companyName": {
          "required": true,
          "type": "string",
          "example": "companyName"
        },
        "description": {
          "required": true,
          "type": "string",
          "example": "mg"
        }
      }
    },
    "inventoryResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/inventoriesp"
      }
    },
    "inventoryResponseWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoriesp"
          }
        }
      }
    },
    "offerImages": {
      "title": "offerImages",
      "type": "object",
      "properties": {
        "fileName": {
          "required": true,
          "type": "string",
          "example": "myfile-1508310904423.jpg"
        },
        "filePath": {
          "required": true,
          "type": "string",
          "example": "images/offers/myfile-1508310904423.jpg"
        },
        "displayPath": {
          "required": true,
          "type": "string",
          "example": "https://localhost/images/offers/myfile-1508310904423.jpg"
        }
      }
    },
    "offerImages1": {
      "properties": {
        "offerImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/offerImages"
          }
        }
      }
    },
    "offerDiscountP": {
      "properties": {
        "stockReceivedId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "discount": {
          "required": true,
          "type": "Double",
          "example": 2.3
        }
      }
    },
    "offerp": {
      "properties": {
        "offerDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "offerType": {
          "required": true,
          "type": "string",
          "example": "productName"
        },
        "imageUrl": {
          "required": true,
          "type": "array",
          "items": {
            "example": "images/offers/myfile-1508310904423.jpg"
          }
        },
        "offerDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/offerDiscountP"
          }
        }
      }
    },
    "offerDiscounts": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "stockReceivedId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "discount": {
          "required": true,
          "type": "Double",
          "example": 2.3
        }
      }
    },
    "offer": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "offerDate": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productName": {
          "required": true,
          "type": "string",
          "example": "productName"
        },
        "offerType": {
          "required": true,
          "type": "string",
          "example": "productName"
        },
        "imageUrl": {
          "required": true,
          "type": "array",
          "items": {
            "example": "images/offers/myfile-1508310904423.jpg"
          }
        },
        "updatedBy": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "createdAt": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "offerDiscounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/offerDiscounts"
          }
        }
      }
    },
    "offerWithPagination": {
      "properties": {
        "count": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/offer"
          }
        }
      }
    },
    "preOrder": {
      "properties": {
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "availableQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "orderedQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 120.0
        }
      }
    },
    "preorderProducts": {
      "properties": {
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "availableQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "orderQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "rate": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 10.0
        }
      }
    },
    "preOrderData": {
      "properties": {
        "customerId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "dateOfDelivery": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 1.22
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 120.0
        },
        "preorderProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/preorderProducts"
          }
        }
      }
    },
    "isApproved": {
      "properties": {
        "amount": {
          "required": true,
          "type": "boolean",
          "example": true
        }
      }
    },
    "preorderProductsDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "preorderId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productName": {
          "required": true,
          "type": "string",
          "example": "productName"
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "availableQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "orderQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "rate": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 10.0
        }
      }
    },
    "preOrderDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "preorderConfirmed": {
          "required": true,
          "type": "boolean",
          "example": false
        },
        "preOrderNumber": {
          "required": true,
          "type": "string",
          "example": "preOrderNumber"
        },
        "customerId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "customerName": {
          "required": true,
          "type": "string",
          "example": "customerName"
        },
        "dateOfDelivery": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 1.22
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 120.0
        },
        "isApproved": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "isApprovedBy": {
          "required": true,
          "type": "string",
          "example": "krishna"
        },

        "preorderProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/preorderProductsDetails"
          }
        }
      }
    },
    "preOrderListDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "preorderConfirmed": {
          "required": true,
          "type": "boolean",
          "example": false
        },
        "preOrderNumber": {
          "required": true,
          "type": "string",
          "example": "preOrderNumber"
        },
        "customerId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "customerName": {
          "required": true,
          "type": "string",
          "example": "customerName"
        },
        "dateOfDelivery": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 120.0
        }
      }
    },
    "preOrderListData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/preOrderListDetails"
      }
    },
    "orderProducts": {
      "properties": {
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "availableQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "orderQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "rate": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 10.0
        }
      }
    },
    "orderData": {
      "properties": {
        "orderConfirmed": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "customerId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "dateOfDelivery": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 1.22
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 120.0
        },
        "orderProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderProducts"
          }
        }
      }
    },
    "orderProductsDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "orderId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "productName": {
          "required": true,
          "type": "string",
          "example": "productName"
        },
        "batchNumber": {
          "required": true,
          "type": "string",
          "example": "batchNumber"
        },
        "availableQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "orderQuantity": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "minSalePrice": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "rate": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "mrp": {
          "required": true,
          "type": "double",
          "example": 10.0
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 10.0
        }
      }
    },
    "orderDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "orderNumber": {
          "required": true,
          "type": "string",
          "example": "preOrderNumber"
        },
        "customerId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "customerName": {
          "required": true,
          "type": "string",
          "example": "customerName"
        },
        "branchName": {
          "required": true,
          "type": "string",
          "example": "branchName"
        },
        "dateOfDelivery": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 1.22
        },
        "amount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 120.0
        },
        "isApproved": {
          "required": true,
          "type": "boolean",
          "example": true
        },
        "isApprovedBy": {
          "required": true,
          "type": "string",
          "example": "krishna"
        },
        "orderProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderProductsDetails"
          }
        }
      }
    },
    "orderListDetails": {
      "properties": {
        "id": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "orderNumber": {
          "required": true,
          "type": "string",
          "example": "preOrderNumber"
        },
        "customerId": {
          "required": true,
          "type": "integer",
          "example": 1
        },
        "customerName": {
          "required": true,
          "type": "string",
          "example": "customerName"
        },
        "dateOfDelivery": {
          "required": true,
          "type": "date",
          "example": "2019-01-02"
        },
        "discount": {
          "required": true,
          "type": "double",
          "example": 100.2
        },
        "totalAmount": {
          "required": true,
          "type": "double",
          "example": 120.0
        }
      }
    },
    "orderListData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/orderListDetails"
      }
    }
  }
}
