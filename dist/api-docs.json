{
	"swagger": "2.0",
	"basePath": "/api",
	"tags": [
		{
			"name": "MPI API",
			"description": ""
		}
	],
	"consumes": [
		"application/json",
		"multipart/form-data"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/token": {
			"post": {
				"tags": [
					"User"
				],
				"description": "Authenticates the user and provides token for the session if authentication is successful",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Authenticate user",
						"required": true,
						"schema": {
							"$ref": "#/definitions/token"
						}
					}
				],
				"responses": {
					"200": {
						"description": "token response",
						"schema": {
							"$ref": "#/definitions/tokenResponse"
						}
					}
				}
			}
		},
		"/users?{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"User"
				],
				"description": "Get All users ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"userName",
							"firstName",
							"lastName",
							"email",
							"designation",
							"mobileNumber"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/userResponse"
						}
					}
				}
			}
		},
		"/users/list?{pageIndex}&{pageSize}": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get list of users with pagination for the logged in user",
				"description": "only accessible to Admin & Managers",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "page index",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "page size",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"employeeId",
							"supervisor",
							"role"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/userListResponse"
						}
					}
				}
			}
		},
		"/users/profileimage/{userId}": {
			"put": {
				"tags": [
					"User"
				],
				"description": "Upload User Profile Image",
				"consumes": [
					"multipart/form-data"
				],
				"operationId": "for the URL",
				"paramType": "form",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "1",
						"required": true,
						"type": "integer"
					},
					{
						"name": "file",
						"in": "formData",
						"paramType": "form",
						"description": "file",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/users/{userId}/assignManager": {
			"put": {
				"tags": [
					"User"
				],
				"summary": "Assign manager to sales agent",
				"description": "only admin can assign",
				"consumes": [
					"application/json"
				],
				"operationId": "for the URL",
				"paramType": "form",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "sales agent id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "manager id",
						"required": true,
						"schema": {
							"$ref": "#/definitions/assignManager"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/users/{userId}/changeStatus": {
			"put": {
				"tags": [
					"User"
				],
				"summary": "Activate or Deactivate user",
				"description": "only admin have permissions",
				"consumes": [
					"application/json"
				],
				"operationId": "for the URL",
				"paramType": "form",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "sales agent id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": true,
						"type": "string",
						"enum": [
							"Activate",
							"Deactivate"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/users/assign/manager/{managerId}/agentsTo/newManager/{newManagerId}": {
			"put": {
				"tags": [
					"User"
				],
				"summary": "Assign manager sales agents to new manager",
				"description": "only admin can assign",
				"consumes": [
					"application/json"
				],
				"operationId": "for the URL",
				"paramType": "form",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "managerId",
						"in": "path",
						"description": "manager id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "newManagerId",
						"in": "path",
						"description": "new manager id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/users/locations?{searchBy}&{searchByValue}": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get logged in manager users locations",
				"description": "only accessible to manager role, when searchBy is selected, search by value required else 400 will be thrown",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "searchBy",
						"in": "query",
						"enum": [
							"firstName",
							"lastName"
						],
						"description": "searchBy",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchByValue",
						"in": "query",
						"description": "searchByValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/userLocations"
						}
					}
				}
			}
		},
		"/users/{userId}/locations": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get logged in manager selected user locations of the day",
				"description": "only accessible to manager role, if user is not found 404 will be thrown",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "user Id",
						"required": true,
						"type": "number"
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/selectedUserLocations"
						}
					}
				}
			}
		},
		"/users/{userId}/last/location": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get logged in manager selected user last location",
				"description": "only accessible to manager role, if user is not found or last location is not found 404 will be thrown",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "user Id",
						"required": true,
						"type": "number"
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/lastLocation"
						}
					}
				}
			}
		},
		"/users/{userId}/details": {
			"get": {
				"tags": [
					"User"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "userId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "User response",
						"schema": {
							"$ref": "#/definitions/userDetails"
						}
					}
				}
			}
		},
		"/users/{userId}": {
			"put": {
				"tags": [
					"User"
				],
				"summary": "update user",
				"description": "only accessible to Admin",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "",
						"required": true,
						"schema": {
							"$ref": "#/definitions/userUpdate"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Users update response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/users/lastLocations": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get last location of  each user who are under logged in user",
				"description": "only accessible to manager,admin roles",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/usersLastLocations"
						}
					}
				}
			}
		},
		"/users/{type}": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get all users if user is admin else gets users under manager",
				"description": "only accessible to manager,admin roles",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "type",
						"in": "path",
						"description": "",
						"type": "string",
						"enum": [
							"All",
							"ZonalManager",
							"RegionalManager",
							"SalesAgent"
						],
						"required": true
					},
					{
						"name": "searchText",
						"in": "query",
						"description": "",
						"type": "string",
						"required": false
					},
					{
						"name": "userStatus",
						"in": "query",
						"description": "",
						"type": "string",
						"required": false,
						"enum": [
							"All",
							"Active",
							"Deactive"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/Users"
						}
					}
				}
			}
		},
		"/users/headusers/{type}": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get all head users ",
				"description": "only accessible to ZonalManager,RegionalManager,SalesAgent roles",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "type",
						"in": "path",
						"description": "",
						"type": "string",
						"enum": [
							"--",
							"ZonalManager",
							"RegionalManager",
							"SalesAgent"
						],
						"required": true
					}
				],
				"responses": {
					"200": {
						"description": "Users response",
						"schema": {
							"$ref": "#/definitions/Users"
						}
					}
				}
			}
		},
		"/users/{userId}/assing/branch/customer": {
			"put": {
				"tags": [
					"User"
				],
				"summary": "assing Branch and customer by userId",
				"description": "only accessible to Admin",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "userId",
						"in": "path",
						"description": "",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "",
						"required": true,
						"schema": {
							"$ref": "#/definitions/userAssingBranch"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Assing Branch and customer",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/companies?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Company"
				],
				"description": "Get All Companies",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"buildingName",
							"city",
							"province",
							"areaCode",
							"phoneNumber",
							"primaryContactPerson",
							"primaryContactNumber",
							"secondaryContactPerson",
							"secondaryContactNumber",
							"address"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Company response",
						"schema": {
							"$ref": "#/definitions/companyResponseWithPagination"
						}
					}
				}
			}
		},
		"/companies": {
			"post": {
				"tags": [
					"Company"
				],
				"description": "Create new company",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Customer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/company"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Company response",
						"schema": {
							"$ref": "#/definitions/companyData"
						}
					}
				}
			}
		},
		"/companies/{id}/details": {
			"get": {
				"tags": [
					"Company"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Company response",
						"schema": {
							"$ref": "#/definitions/companyData"
						}
					}
				}
			}
		},
		"/companies/{id}": {
			"put": {
				"tags": [
					"Company"
				],
				"description": "Update Company",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "company",
						"required": true,
						"schema": {
							"$ref": "#/definitions/company"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Company response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/companies/{companyId}": {
			"delete": {
				"tags": [
					"Company"
				],
				"description": "delete the comapny by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "companyId",
						"in": "path",
						"description": "companyId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/customers?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Customer"
				],
				"description": "Get All Customers",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"customerType",
							"buildingName",
							"city",
							"province",
							"areaCode",
							"phoneNumber",
							"primaryContactPerson",
							"primaryContactNumber",
							"secondaryContactPerson",
							"secondaryContactNumber",
							"address"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"$ref": "#/definitions/customerResponseWithPagination"
						}
					}
				}
			}
		},
		"/customers/all?{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Customer"
				],
				"description": "Get All Customer ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"customerType",
							"buildingName",
							"city",
							"province",
							"areaCode",
							"phoneNumber",
							"primaryContactPerson",
							"primaryContactNumber",
							"secondaryContactPerson",
							"secondaryContactNumber",
							"address"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"$ref": "#/definitions/customerResponse"
						}
					}
				}
			}
		},
		"/customers": {
			"post": {
				"tags": [
					"Customer"
				],
				"description": "Create new Customer",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Customer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/customer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"$ref": "#/definitions/customerData"
						}
					}
				}
			}
		},
		"/customers/{id}/details": {
			"get": {
				"tags": [
					"Customer"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"$ref": "#/definitions/customerData"
						}
					}
				}
			}
		},
		"/customers/{id}": {
			"put": {
				"tags": [
					"Customer"
				],
				"description": "Update Customer",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Customer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/customer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/customers/{id}/branch": {
			"put": {
				"tags": [
					"Customer"
				],
				"description": "Assign branch",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Customer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/customerBranch"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/customers/{warehouseId}/all": {
			"get": {
				"tags": [
					"Customer"
				],
				"description": "get all Customers by branch id",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "warehouseId",
						"in": "path",
						"description": "warehouseId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Customer response",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryresponse"
							}
						}
					}
				}
			}
		},
		"/customers/{coustmerId}": {
			"delete": {
				"tags": [
					"Customer"
				],
				"description": "delete the Customer by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "coustmerId",
						"in": "path",
						"description": "coustmerId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/categories": {
			"post": {
				"tags": [
					"category"
				],
				"description": "Create new category",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "category",
						"required": true,
						"schema": {
							"$ref": "#/definitions/category"
						}
					}
				],
				"responses": {
					"200": {
						"description": "category response",
						"schema": {
							"$ref": "#/definitions/category"
						}
					}
				}
			}
		},
		"/categories/all": {
			"get": {
				"tags": [
					"category"
				],
				"description": "get all categories",
				"operationId": "",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryresponse"
							}
						}
					}
				}
			}
		},
		"/categories/subcategories": {
			"post": {
				"tags": [
					"category"
				],
				"description": "Create new subcategory",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "subcategory",
						"required": true,
						"schema": {
							"$ref": "#/definitions/subcategory"
						}
					}
				],
				"responses": {
					"200": {
						"description": "category response",
						"schema": {
							"$ref": "#/definitions/subcategory"
						}
					}
				}
			}
		},
		"/categories/{id}/subcategories": {
			"get": {
				"tags": [
					"category"
				],
				"description": "get all subcategories by category id",
				"operationId": "",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "",
						"required": true,
						"type": "number"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/subcategoryresponse"
							}
						}
					}
				}
			}
		},
		"/unitsofmeasurements": {
			"post": {
				"tags": [
					"Units of measurement"
				],
				"description": "Create new unitsofmeasurement",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Units of measurement",
						"required": true,
						"schema": {
							"$ref": "#/definitions/unitsofMeasurement"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Units of measurement response",
						"schema": {
							"$ref": "#/definitions/unitsofMeasurements"
						}
					}
				}
			}
		},
		"/unitsofmeasurements/all": {
			"get": {
				"tags": [
					"Units of measurement"
				],
				"description": "get all unitsofmeasurements",
				"operationId": "",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/unitsofmeasurementResponse"
							}
						}
					}
				}
			}
		},
		"/unitsofmeasurements/{id}/details": {
			"get": {
				"tags": [
					"Units of measurement"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Units of Measurement response",
						"schema": {
							"$ref": "#/definitions/unitsofMeasurements"
						}
					}
				}
			}
		},
		"/unitsofmeasurements/{id}": {
			"put": {
				"tags": [
					"Units of measurement"
				],
				"description": "Update unitsofmeasurement",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "unitsofmeasurement",
						"required": true,
						"schema": {
							"$ref": "#/definitions/unitsofMeasurement"
						}
					}
				],
				"responses": {
					"200": {
						"description": "unitsofmeasurement response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/unitsofmeasurements/{uId}": {
			"delete": {
				"tags": [
					"Units of measurement"
				],
				"description": "delete the unitsofmeasurement by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "uId",
						"in": "path",
						"description": "uId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/products?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Product"
				],
				"description": "Get All Product ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"companyId",
							"categoryId",
							"subCategoryId",
							"units",
							"unitsofMeasurement"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/productResponseWithPagination"
						}
					}
				}
			}
		},
		"/products/all?{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Product"
				],
				"description": "Get All Product ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"companyName",
							"injectionType",
							"formType",
							"packSize",
							"dosageValue",
							"dosageType"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/productsResponse"
						}
					}
				}
			}
		},
		"/products": {
			"post": {
				"tags": [
					"Product"
				],
				"description": "Create new Product,injectionType(Oral, Rectal),formType(Tablet, capsule, suspension, softgel)",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "product",
						"required": true,
						"schema": {
							"$ref": "#/definitions/products"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/products/{productId}/details": {
			"get": {
				"tags": [
					"Product"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/productsp"
						}
					}
				}
			}
		},
		"/products/{id}": {
			"put": {
				"tags": [
					"Product"
				],
				"description": "Update Product",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Product",
						"required": true,
						"schema": {
							"$ref": "#/definitions/products"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/products/{productId}": {
			"delete": {
				"tags": [
					"Product"
				],
				"description": "delete the Product by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/products/{productId}/priceCatalogue": {
			"get": {
				"tags": [
					"Product"
				],
				"description": "get product price catalogue ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/priceCatalogueByProduct"
						}
					}
				}
			}
		},
		"/productprices?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"ProductPrice"
				],
				"description": "Get All ProductPrice ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"productId",
							"fromRange",
							"toRange",
							"price"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Product Price response",
						"schema": {
							"$ref": "#/definitions/productPriceWithPagination"
						}
					}
				}
			}
		},
		"/productprices": {
			"post": {
				"tags": [
					"ProductPrice"
				],
				"description": "Create new ProductPrice",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "product price",
						"required": true,
						"schema": {
							"$ref": "#/definitions/productPrice"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Product response",
						"schema": {
							"$ref": "#/definitions/productPrice"
						}
					}
				}
			}
		},
		"/productprices/{id}/details": {
			"get": {
				"tags": [
					"ProductPrice"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Product Price response",
						"schema": {
							"$ref": "#/definitions/productPrice"
						}
					}
				}
			}
		},
		"/productprices/{id}/product/{quantity}/range": {
			"get": {
				"tags": [
					"ProductPrice"
				],
				"description": "get quantity range and price by quantity, if no range 404 will be thrown",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "quantity",
						"in": "path",
						"description": "quantity",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/productPriceQuantityRangeByQuantity"
						}
					}
				}
			}
		},
		"/productprices/{id}": {
			"put": {
				"tags": [
					"ProductPrice"
				],
				"description": "Update ProductPrice",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Customer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/productPrice"
						}
					}
				],
				"responses": {
					"200": {
						"description": "ProductPrice response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/productprices/{productPriceId}": {
			"delete": {
				"tags": [
					"ProductPrice"
				],
				"description": "delete the ProductPrice by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "productPriceId",
						"in": "path",
						"description": "productPriceId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/warehouses?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Warehouse"
				],
				"description": "Get All Warehouses",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"name",
							"email",
							"phoneNumber",
							"warehouseType",
							"province",
							"address",
							"areaCode",
							"buildingName",
							"city"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Warehouse response",
						"schema": {
							"$ref": "#/definitions/warehouseResponseWithPagination"
						}
					}
				}
			}
		},
		"/warehouses/all": {
			"get": {
				"tags": [
					"Warehouse"
				],
				"description": "get all Warehouses",
				"operationId": "",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryresponse"
							}
						}
					}
				}
			}
		},
		"/warehouses": {
			"post": {
				"tags": [
					"Warehouse"
				],
				"description": "Create new Warehouse,  warehouseType:(Primary, Secondary)",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Warehouse",
						"required": true,
						"schema": {
							"$ref": "#/definitions/warehouse"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Warehouse response",
						"schema": {
							"$ref": "#/definitions/warehouseData"
						}
					}
				}
			}
		},
		"/warehouses/{id}/details": {
			"get": {
				"tags": [
					"Warehouse"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Warehouse response",
						"schema": {
							"$ref": "#/definitions/warehouseData"
						}
					}
				}
			}
		},
		"/warehouses/{id}": {
			"put": {
				"tags": [
					"Warehouse"
				],
				"description": "Update Warehouse warehouseType:(Primary, Secondary)",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Warehouse",
						"required": true,
						"schema": {
							"$ref": "#/definitions/warehouse"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Warehouse response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/warehouses/{warehouseId}": {
			"delete": {
				"tags": [
					"Warehouse"
				],
				"description": "delete the Warehouse by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "warehouseId",
						"in": "path",
						"description": "warehouseId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/warehouses/branches": {
			"get": {
				"tags": [
					"Warehouse"
				],
				"description": "get all branches",
				"operationId": "",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/categoryresponse"
							}
						}
					}
				}
			}
		},
		"/warehouses/{primaryWarehouseId}/branches": {
			"get": {
				"tags": [
					"Warehouse"
				],
				"description": "get all branches by primaryWarehouseId",
				"operationId": "",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "primaryWarehouseId",
						"in": "path",
						"description": "primaryWarehouseId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/warehouseData"
							}
						}
					}
				}
			}
		},
		"/inventories?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "Get All Inventory ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"grn",
							"inventoryDate",
							"warehouseId",
							"withPo",
							"orderNumber",
							"principalName"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Inventory response",
						"schema": {
							"$ref": "#/definitions/inventoryResponseWithPagination"
						}
					}
				}
			}
		},
		"/inventories/all?{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "Get All Inventory ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"grn",
							"inventoryDate",
							"warehouseId",
							"withPo",
							"orderNumber",
							"principalName"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Inventory response",
						"schema": {
							"$ref": "#/definitions/inventoryResponse"
						}
					}
				}
			}
		},
		"/inventories": {
			"post": {
				"tags": [
					"Inventory"
				],
				"description": "Create new Inventory",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Inventory",
						"required": true,
						"schema": {
							"$ref": "#/definitions/inventories"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Inventory response",
						"schema": {
							"$ref": "#/definitions/inventoryData"
						}
					}
				}
			}
		},
		"/inventories/grn/{inventoryId}": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "GRN Generation ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "inventoryId",
						"in": "path",
						"description": "inventoryId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Inventory response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/inventories/{inventoryId}/details": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "inventoryId",
						"in": "path",
						"description": "inventoryId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Inventory response",
						"schema": {
							"$ref": "#/definitions/inventoryDetails"
						}
					}
				}
			}
		},
		"/inventories/{inventoryId}/stockreceiveds": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "get stockreceived ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "inventoryId",
						"in": "path",
						"description": "inventoryId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Stockreceived response",
						"schema": {
							"$ref": "#/definitions/stockReceivedListData"
						}
					}
				}
			}
		},
		"/inventories/{productId}/stockreceiveds": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "get stockreceived ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Stockreceived response",
						"schema": {
							"$ref": "#/definitions/stockReceivedListData"
						}
					}
				}
			}
		},
		"/inventories/{productId}/stockreceiveds/{batchNumber}": {
			"get": {
				"tags": [
					"Inventory"
				],
				"description": "get stockreceived ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "productId",
						"in": "path",
						"description": "productId",
						"required": true,
						"type": "integer"
					},
					{
						"name": "batchNumber",
						"in": "path",
						"description": "batchNumber",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Stockreceived response",
						"schema": {
							"$ref": "#/definitions/stockReceivedListData"
						}
					}
				}
			}
		},
		"/stockreceived": {
			"post": {
				"tags": [
					"StockReceived"
				],
				"description": "Create new stockreceived",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "stockreceived",
						"required": true,
						"schema": {
							"$ref": "#/definitions/stockReceivedData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "stockreceived response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/stockreceived/{id}": {
			"put": {
				"tags": [
					"StockReceived"
				],
				"description": "Update StockReceived",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "StockReceived",
						"required": true,
						"schema": {
							"$ref": "#/definitions/stockReceivedData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "StockReceived response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/stockreceived/{stockReceivedId}": {
			"delete": {
				"tags": [
					"StockReceived"
				],
				"description": "delete the StockReceived by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "stockReceivedId",
						"in": "path",
						"description": "stockReceivedId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/offers?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Offer"
				],
				"description": "Get All Offers ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"offerDate",
							"productId",
							"offerType"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Offer response",
						"schema": {
							"$ref": "#/definitions/offerWithPagination"
						}
					}
				}
			}
		},
		"/offers/images/upload": {
			"post": {
				"tags": [
					"Offer"
				],
				"description": "Upload Offer Image",
				"consumes": [
					"multipart/form-data"
				],
				"operationId": "for the URL",
				"paramType": "form",
				"parameters": [
					{
						"name": "file",
						"in": "formData",
						"paramType": "form",
						"description": "file",
						"required": true,
						"type": "file"
					}
				],
				"responses": {
					"200": {
						"description": "offer Response",
						"schema": {
							"$ref": "#/definitions/offerImages1"
						}
					}
				}
			}
		},
		"/offers": {
			"post": {
				"tags": [
					"Offer"
				],
				"description": "Create new Offer",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "offer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/offerp"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Offer response",
						"schema": {
							"$ref": "#/definitions/offer"
						}
					}
				}
			}
		},
		"/offers/{id}/details": {
			"get": {
				"tags": [
					"Offer"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Offer response",
						"schema": {
							"$ref": "#/definitions/offer"
						}
					}
				}
			}
		},
		"/offers/{id}": {
			"put": {
				"tags": [
					"Offer"
				],
				"description": "Update Offer",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Offer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/offerp"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Offer response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/offers/{offerId}": {
			"delete": {
				"tags": [
					"Offer"
				],
				"description": "delete the offer by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "offerId",
						"in": "path",
						"description": "offerId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		},
		"/transactions?pageIndex={pageIndex}&pageSize={pageSize}&{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Transaction"
				],
				"description": "Get All Transaction ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "pageIndex",
						"in": "query",
						"description": "PageIndex",
						"required": true,
						"type": "integer"
					},
					{
						"name": "pageSize",
						"in": "query",
						"description": "PageSize",
						"required": true,
						"type": "integer"
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"transactionNumber",
							"transactionDate",
							"companyId",
							"address",
							"dateOfDelivery"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "propertyValue",
						"in": "query",
						"description": "propertyValue",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Transaction response",
						"schema": {
							"$ref": "#/definitions/transactionResponseWithPagination"
						}
					}
				}
			}
		},
		"/transactions/all?{propertyName}&{propertyValue}": {
			"get": {
				"tags": [
					"Transaction"
				],
				"description": "Get All transactions ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "propertyName",
						"in": "query",
						"enum": [
							"transactionNumber",
							"transactionDate",
							"companyId",
							"address",
							"dateOfDelivery"
						],
						"description": "PropertyName",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Transaction response",
						"schema": {
							"$ref": "#/definitions/transactionResponse"
						}
					}
				}
			}
		},
		"/transactions": {
			"post": {
				"tags": [
					"Transaction"
				],
				"description": "Create new Transaction",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "Transaction",
						"required": true,
						"schema": {
							"$ref": "#/definitions/transaction"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Transaction response",
						"schema": {
							"$ref": "#/definitions/transactionData"
						}
					}
				}
			}
		},
		"/transactions/{id}/details": {
			"get": {
				"tags": [
					"Transaction"
				],
				"description": "get by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Transaction response",
						"schema": {
							"$ref": "#/definitions/transactionDetails"
						}
					}
				}
			}
		},
		"/transactions/{transactionId}/preorders": {
			"get": {
				"tags": [
					"Transaction"
				],
				"description": "get preorders ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "transactionId",
						"in": "path",
						"description": "transactionId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "preorders response",
						"schema": {
							"$ref": "#/definitions/preOrderListData"
						}
					}
				}
			}
		},
		"/preorders": {
			"post": {
				"tags": [
					"PreOrder"
				],
				"description": "Create new PreOrder",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "PreOrder",
						"required": true,
						"schema": {
							"$ref": "#/definitions/preOrderData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "PreOrder response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/preorders/{id}": {
			"put": {
				"tags": [
					"PreOrder"
				],
				"description": "Update PreOrder",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer"
					},
					{
						"name": "Job Parameters",
						"in": "body",
						"description": "PreOrder",
						"required": true,
						"schema": {
							"$ref": "#/definitions/preOrderData"
						}
					}
				],
				"responses": {
					"200": {
						"description": "PreOrder response",
						"schema": {
							"$ref": "#/definitions/successMessageResponse"
						}
					}
				}
			}
		},
		"/preorders/{preOrderId}": {
			"delete": {
				"tags": [
					"PreOrder"
				],
				"description": "delete the PreOrder by id ",
				"operationId": "for the URL",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "bearer token",
						"required": true
					},
					{
						"name": "preOrderId",
						"in": "path",
						"description": "preOrderId",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Ok"
					}
				}
			}
		}
	},
	"definitions": {
		"successMessageResponse": {
			"properties": {
				"message": {
					"type": "string"
				}
			}
		},
		"token": {
			"properties": {
				"email": {
					"required": true,
					"type": "string",
					"example": "krish@gmail.com"
				},
				"password": {
					"required": true,
					"type": "string",
					"example": "Design_20"
				}
			}
		},
		"tokenResponse": {
			"properties": {
				"token": {
					"required": true,
					"type": "string"
				},
				"user": {
					"title": "User",
					"type": "object",
					"properties": {
						"id": {
							"required": true,
							"type": "integer",
							"example": 1
						},
						"userName": {
							"required": true,
							"type": "string"
						},
						"firstName": {
							"required": true,
							"type": "string"
						},
						"lastName": {
							"required": true,
							"type": "string",
							"example": "abc@gmail.com"
						},
						"email": {
							"required": true,
							"type": "string"
						},
						"userRole": {
							"required": true,
							"type": "string"
						},
						"designation": {
							"required": true,
							"type": "string"
						},
						"avatar": {
							"required": true,
							"type": "string"
						},
						"mobileNumber": {
							"required": true,
							"type": "string"
						}
					}
				}
			}
		},
		"user": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string"
				},
				"firstName": {
					"required": true,
					"type": "string"
				},
				"lastName": {
					"required": true,
					"type": "string",
					"example": "abc@gmail.com"
				},
				"email": {
					"required": true,
					"type": "string"
				},
				"userRole": {
					"required": true,
					"type": "string"
				},
				"designation": {
					"required": true,
					"type": "string"
				},
				"avatar": {
					"required": true,
					"type": "string"
				},
				"mobileNumber": {
					"required": true,
					"type": "string"
				},
				"target": {
					"required": false,
					"type": "number"
				},
				"supervisior": {
					"required": false,
					"type": "string"
				},
				"dateOfJoin": {
					"required": true,
					"type": "string",
					"example": "2019-02-01"
				},
				"employeeId": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"isActive": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"deactivatedDate": {
					"required": false,
					"type": "string",
					"example": "2018-01-10"
				},
				"hasAgents": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"warehouseId": {
					"required": false,
					"type": "integer",
					"example": 1
				},
				"customerIds": {
					"required": true,
					"type": "array",
					"example": [
						1
					]
				}
			}
		},
		"userDetails": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"firstName": {
					"required": true,
					"type": "string"
				},
				"lastName": {
					"required": true,
					"type": "string",
					"example": "abc@gmail.com"
				},
				"email": {
					"required": true,
					"type": "string"
				},
				"userName": {
					"required": true,
					"type": "string"
				},
				"userRole": {
					"required": true,
					"type": "string"
				},
				"designation": {
					"required": true,
					"type": "string"
				},
				"avatar": {
					"required": true,
					"type": "string"
				},
				"mobileNumber": {
					"required": true,
					"type": "string"
				},
				"address": {
					"required": false,
					"type": "string"
				},
				"dateOfJoin": {
					"required": true,
					"type": "string",
					"example": "2019-02-01"
				},
				"employeeId": {
					"required": true,
					"type": "string",
					"example": ""
				}
			}
		},
		"userResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/user"
			}
		},
		"userListResponse": {
			"properties": {
				"count": {
					"type": "integer",
					"required": true
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/user"
					}
				}
			}
		},
		"usersLocation": {
			"properties": {
				"userId": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"id": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				},
				"createdAt": {
					"required": true,
					"type": "string",
					"example": "2019-02-02T10:18:16.397Z"
				}
			}
		},
		"assignManager": {
			"properties": {
				"managerId": {
					"type": "integer",
					"required": true
				}
			}
		},
		"Users": {
			"type": "array",
			"items": {
				"properties": {
					"id": {
						"required": true,
						"type": "integer"
					},
					"firstName": {
						"required": true,
						"type": "string"
					},
					"lastName": {
						"required": true,
						"type": "string"
					},
					"userRole": {
						"required": true,
						"type": "string"
					}
				}
			}
		},
		"userUpdate": {
			"properties": {
				"firstName": {
					"type": "string",
					"required": true
				},
				"lastName": {
					"type": "string",
					"required": true
				},
				"email": {
					"type": "string",
					"required": true
				},
				"userName": {
					"type": "string",
					"required": true
				},
				"employeeId": {
					"type": "string",
					"required": true
				},
				"mobileNumber": {
					"type": "string",
					"required": true
				},
				"dateOfJoin": {
					"type": "string",
					"required": true
				}
			}
		},
		"userAssingBranch": {
			"properties": {
				"warehouseId": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"customerIds": {
					"required": true,
					"type": "array",
					"example": [
						1,
						2
					]
				}
			}
		},
		"userLocations": {
			"type": "array",
			"items": {
				"properties": {
					"id": {
						"required": true,
						"type": "number",
						"example": 1
					},
					"firstName": {
						"required": true,
						"type": "string",
						"example": "john"
					},
					"lastName": {
						"required": true,
						"type": "string",
						"example": "john"
					},
					"avatar": {
						"required": true,
						"type": "string",
						"example": ""
					},
					"email": {
						"required": true,
						"type": "string",
						"example": "john"
					},
					"userRole": {
						"required": true,
						"type": "string",
						"example": ""
					},
					"locations": {
						"required": true,
						"type": "array",
						"items": {
							"$ref": "#/definitions/usersLocation"
						}
					}
				}
			}
		},
		"usersLastLocations": {
			"type": "array",
			"items": {
				"properties": {
					"id": {
						"type": "integer",
						"required": true
					},
					"userName": {
						"type": "string",
						"required": true
					},
					"name": {
						"type": "string",
						"required": true
					},
					"latitude": {
						"type": "number",
						"required": true
					},
					"longitude": {
						"type": "number",
						"required": true
					},
					"locationDateTime": {
						"type": "string",
						"required": true,
						"example": "2019-02-21 07:52:01.747+00"
					}
				}
			}
		},
		"selectedUserLocations": {
			"properties": {
				"id": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"firstName": {
					"required": true,
					"type": "string",
					"example": "john"
				},
				"lastName": {
					"required": true,
					"type": "string",
					"example": "john"
				},
				"avatar": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"email": {
					"required": true,
					"type": "string",
					"example": "john"
				},
				"userRole": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"locations": {
					"required": true,
					"type": "array",
					"items": {
						"$ref": "#/definitions/usersLocation"
					}
				}
			}
		},
		"lastLocation": {
			"properties": {
				"id": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				},
				"createdAt": {
					"required": true,
					"type": "string",
					"example": "2019-02-02T10:18:16.397Z"
				}
			}
		},
		"company": {
			"properties": {
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"buildingName": {
					"required": true,
					"type": "string",
					"example": "buildingName"
				},
				"city": {
					"required": true,
					"type": "string",
					"example": "city"
				},
				"province": {
					"required": true,
					"type": "string",
					"example": "province"
				},
				"areaCode": {
					"required": true,
					"type": "string",
					"example": "areaCode"
				},
				"phoneNumber": {
					"required": true,
					"type": "string",
					"example": "phoneNumber"
				},
				"primaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "primaryContactPerson"
				},
				"primaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "primaryContactNumber"
				},
				"primaryEmail": {
					"required": true,
					"type": "string",
					"example": "inturi99@gmail.com"
				},
				"secondaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "secondaryContactPerson"
				},
				"secondaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "secondaryContactNumber"
				},
				"secondaryEmail": {
					"required": true,
					"type": "string",
					"example": "krishna@gmail.com"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				}
			}
		},
		"companyData": {
			"properties": {
				"id": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"buildingName": {
					"required": true,
					"type": "string",
					"example": "buildingName"
				},
				"city": {
					"required": true,
					"type": "string",
					"example": "city"
				},
				"province": {
					"required": true,
					"type": "string",
					"example": "province"
				},
				"areaCode": {
					"required": true,
					"type": "string",
					"example": "areaCode"
				},
				"phoneNumber": {
					"required": true,
					"type": "string",
					"example": "phoneNumber"
				},
				"primaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "primaryContactPerson"
				},
				"primaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "primaryContactNumber"
				},
				"primaryEmail": {
					"required": true,
					"type": "string",
					"example": "inturi99@gmail.com"
				},
				"secondaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "secondaryContactPerson"
				},
				"secondaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "secondaryContactNumber"
				},
				"secondaryEmail": {
					"required": true,
					"type": "string",
					"example": "krishna@gmail.com"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				},
				"updatedBy": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"createdAt": {
					"required": true,
					"type": "string",
					"example": "2019-02-02T10:18:16.397Z"
				}
			}
		},
		"companyResponseWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/companyData"
					}
				}
			}
		},
		"companyResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/companyData"
			}
		},
		"customer": {
			"properties": {
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"warehouseId": {
					"required": true,
					"type": "number",
					"example": null
				},
				"customerType": {
					"required": true,
					"type": "string",
					"example": "customerType"
				},
				"buildingName": {
					"required": true,
					"type": "string",
					"example": "buildingName"
				},
				"city": {
					"required": true,
					"type": "string",
					"example": "city"
				},
				"province": {
					"required": true,
					"type": "string",
					"example": "province"
				},
				"areaCode": {
					"required": true,
					"type": "string",
					"example": "areaCode"
				},
				"phoneNumber": {
					"required": true,
					"type": "string",
					"example": "phoneNumber"
				},
				"primaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "primaryContactPerson"
				},
				"primaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "primaryContactNumber"
				},
				"primaryEmail": {
					"required": true,
					"type": "string",
					"example": "inturi99@gmail.com"
				},
				"secondaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "secondaryContactPerson"
				},
				"secondaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "secondaryContactNumber"
				},
				"secondaryEmail": {
					"required": true,
					"type": "string",
					"example": "krishna@gmail.com"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				}
			}
		},
		"customerBranch": {
			"properties": {
				"warehouseId": {
					"required": true,
					"type": "number",
					"example": 1
				}
			}
		},
		"customerData": {
			"properties": {
				"id": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"warehouseId": {
					"required": true,
					"type": "number",
					"example": null
				},
				"warehouseName": {
					"required": true,
					"type": "string",
					"example": null
				},
				"customerType": {
					"required": true,
					"type": "string",
					"example": "customerType"
				},
				"buildingName": {
					"required": true,
					"type": "string",
					"example": "buildingName"
				},
				"city": {
					"required": true,
					"type": "string",
					"example": "city"
				},
				"province": {
					"required": true,
					"type": "string",
					"example": "province"
				},
				"areaCode": {
					"required": true,
					"type": "string",
					"example": "areaCode"
				},
				"phoneNumber": {
					"required": true,
					"type": "string",
					"example": "phoneNumber"
				},
				"primaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "primaryContactPerson"
				},
				"primaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "primaryContactNumber"
				},
				"primaryEmail": {
					"required": true,
					"type": "string",
					"example": "inturi99@gmail.com"
				},
				"secondaryContactPerson": {
					"required": true,
					"type": "string",
					"example": "secondaryContactPerson"
				},
				"secondaryContactNumber": {
					"required": true,
					"type": "string",
					"example": "secondaryContactNumber"
				},
				"secondaryEmail": {
					"required": true,
					"type": "string",
					"example": "krishna@gmail.com"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				},
				"updatedBy": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"createdAt": {
					"required": true,
					"type": "string",
					"example": "2019-02-02T10:18:16.397Z"
				}
			}
		},
		"customerResponseWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerData"
					}
				}
			}
		},
		"customerResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/customerData"
			}
		},
		"categoryresponse": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": ""
				}
			}
		},
		"category": {
			"properties": {
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"industry": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				}
			}
		},
		"subcategory": {
			"properties": {
				"categoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				}
			}
		},
		"subcategoryresponse": {
			"properties": {
				"categoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": ""
				}
			}
		},
		"unitsofmeasurementResponse": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": ""
				}
			}
		},
		"unitsofMeasurement": {
			"properties": {
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"description": {
					"required": false,
					"type": "string",
					"example": "description"
				}
			}
		},
		"unitsofMeasurements": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": "Combiflam"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				}
			}
		},
		"products": {
			"properties": {
				"name": {
					"required": true,
					"type": "string",
					"example": "Combiflam"
				},
				"companyId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"categoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"subCategoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"units": {
					"required": true,
					"type": "double",
					"example": 1.1
				},
				"unitsofMeasurement": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				},
				"classificationName": {
					"required": true,
					"type": "string",
					"example": "classificationName"
				}
			}
		},
		"productsp": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": "Combiflam"
				},
				"companyId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"companyName": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"categoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"categoryName": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"subCategoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"subCategoryName": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"units": {
					"required": true,
					"type": "double",
					"example": 1.1
				},
				"unitsofMeasurement": {
					"required": true,
					"type": "string",
					"example": ""
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				},
				"classificationName": {
					"required": true,
					"type": "string",
					"example": "classificationName"
				}
			}
		},
		"productsResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/productsp"
			}
		},
		"productResponseWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/productsp"
					}
				}
			}
		},
		"productPrice": {
			"properties": {
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"fromRange": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"toRange": {
					"required": true,
					"type": "integer",
					"example": 10
				},
				"price": {
					"required": true,
					"type": "double",
					"example": 2
				},
				"productName": {
					"required": true,
					"type": "string",
					"example": ""
				}
			}
		},
		"priceCatalogueByProduct": {
			"type": "array",
			"items": {
				"properties": {
					"id": {
						"required": true,
						"type": "integer",
						"example": 1
					},
					"productId": {
						"required": true,
						"type": "integer",
						"example": 1
					},
					"productName": {
						"required": true,
						"type": "string",
						"example": ""
					},
					"fromRange": {
						"required": true,
						"type": "number",
						"example": 1
					},
					"toRange": {
						"required": true,
						"type": "number",
						"example": 100
					},
					"price": {
						"required": true,
						"type": "number",
						"example": 100.23
					}
				}
			}
		},
		"productPriceQuantityRangeByQuantity": {
			"properties": {
				"id": {
					"type": "integer",
					"required": true
				},
				"fromRange": {
					"type": "integer",
					"required": true
				},
				"toRange": {
					"type": "integer",
					"required": true
				},
				"price": {
					"type": "number",
					"required": true
				}
			}
		},
		"productPriceWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/productPrice"
					}
				}
			}
		},
		"warehouse": {
			"properties": {
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"email": {
					"required": true,
					"type": "string",
					"example": "inturi99@gmail.com"
				},
				"phoneNumber": {
					"required": true,
					"type": "string",
					"example": "phoneNumber"
				},
				"warehouseType": {
					"required": true,
					"type": "string",
					"example": "Primary"
				},
				"primaryWarehouseId": {
					"required": false,
					"type": "number",
					"example": null
				},
				"province": {
					"required": true,
					"type": "string",
					"example": "province"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				},
				"areaCode": {
					"required": true,
					"type": "string",
					"example": "areaCode"
				},
				"buildingName": {
					"required": true,
					"type": "string",
					"example": "buildingName"
				},
				"city": {
					"required": true,
					"type": "string",
					"example": "city"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				}
			}
		},
		"warehouseData": {
			"properties": {
				"id": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"name": {
					"required": true,
					"type": "string",
					"example": "techno"
				},
				"email": {
					"required": true,
					"type": "string",
					"example": "inturi99@gmail.com"
				},
				"phoneNumber": {
					"required": true,
					"type": "string",
					"example": "phoneNumber"
				},
				"warehouseType": {
					"required": true,
					"type": "string",
					"example": "Primary"
				},
				"primaryWarehouseId": {
					"required": false,
					"type": "number",
					"example": null
				},
				"province": {
					"required": true,
					"type": "string",
					"example": "province"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"longitude": {
					"required": true,
					"type": "number",
					"example": 10.6758
				},
				"latitude": {
					"required": true,
					"type": "number",
					"example": -122.3445
				},
				"areaCode": {
					"required": true,
					"type": "string",
					"example": "areaCode"
				},
				"buildingName": {
					"required": true,
					"type": "string",
					"example": "buildingName"
				},
				"city": {
					"required": true,
					"type": "string",
					"example": "city"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "pharmacy"
				},
				"updatedBy": {
					"required": true,
					"type": "number",
					"example": 1
				},
				"createdAt": {
					"required": true,
					"type": "string",
					"example": "2019-02-02T10:18:16.397Z"
				}
			}
		},
		"warehouseResponseWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/warehouseData"
					}
				}
			}
		},
		"warehouseResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/warehouseData"
			}
		},
		"stockReceiveds": {
			"properties": {
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"unitofMeasurement": {
					"required": true,
					"type": "string",
					"example": "unitofMeasurement"
				},
				"dateOfManufacture": {
					"required": true,
					"type": "date",
					"example": "2019-01-10"
				},
				"expiryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-12"
				},
				"receivedQuantity": {
					"required": true,
					"type": "double",
					"example": 10
				},
				"price": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"mrp": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"amount": {
					"required": true,
					"type": "double",
					"example": 120.00
				}
			}
		},
		"stockReceivedData": {
			"properties": {
				"inventoryId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"unitofMeasurement": {
					"required": true,
					"type": "string",
					"example": "unitofMeasurement"
				},
				"dateOfManufacture": {
					"required": true,
					"type": "date",
					"example": "2019-01-10"
				},
				"expiryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-12"
				},
				"receivedQuantity": {
					"required": true,
					"type": "double",
					"example": 10
				},
				"price": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"mrp": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"amount": {
					"required": true,
					"type": "double",
					"example": 120.00
				}
			}
		},
		"inventories": {
			"properties": {
				"inventoryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"warehouseId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"withPo": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"orderNumber": {
					"required": true,
					"type": "string",
					"example": "orderNumber"
				},
				"companyId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				},
				"stockReceiveds": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/stockReceiveds"
					}
				}
			}
		},
		"stockReceivedDetails": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"productName": {
					"required": true,
					"type": "string",
					"example": "productName"
				},
				"batchNumber": {
					"required": true,
					"type": "string",
					"example": "batchNumber"
				},
				"unitofMeasurement": {
					"required": true,
					"type": "string",
					"example": "unitofMeasurement"
				},
				"dateOfManufacture": {
					"required": true,
					"type": "date",
					"example": "2019-01-10"
				},
				"expiryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-12"
				},
				"receivedQuantity": {
					"required": true,
					"type": "double",
					"example": 10
				},
				"price": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"mrp": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"amount": {
					"required": true,
					"type": "double",
					"example": 120.00
				}
			}
		},
		"stockReceivedListData": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/stockReceivedDetails"
			}
		},
		"inventoryDetails": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"grn": {
					"required": true,
					"type": "string",
					"example": "GRN0001"
				},
				"isgrn": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"inventoryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"warehouseId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"withPo": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"orderNumber": {
					"required": true,
					"type": "string",
					"example": "orderNumber"
				},
				"companyId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"companyName": {
					"required": true,
					"type": "string",
					"example": "companyName"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				},
				"stockReceiveds": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/stockReceivedDetails"
					}
				}
			}
		},
		"inventoryData": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"grn": {
					"required": true,
					"type": "string",
					"example": "GRN0001"
				},
				"isgrn": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"inventoryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"warehouseId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"withPo": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"orderNumber": {
					"required": true,
					"type": "string",
					"example": "orderNumber"
				},
				"companyId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"companyName": {
					"required": true,
					"type": "string",
					"example": "companyName"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				}
			}
		},
		"inventoriesp": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"inventoryDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"warehouseId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"withPo": {
					"required": true,
					"type": "boolean",
					"example": true
				},
				"orderNumber": {
					"required": true,
					"type": "string",
					"example": "orderNumber"
				},
				"companyId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"companyName": {
					"required": true,
					"type": "string",
					"example": "companyName"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				}
			}
		},
		"inventoryResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/inventoriesp"
			}
		},
		"inventoryResponseWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/inventoriesp"
					}
				}
			}
		},
		"offerImages": {
			"title": "offerImages",
			"type": "object",
			"properties": {
				"fileName": {
					"required": true,
					"type": "string",
					"example": "myfile-1508310904423.jpg"
				},
				"filePath": {
					"required": true,
					"type": "string",
					"example": "images/offers/myfile-1508310904423.jpg"
				},
				"displayPath": {
					"required": true,
					"type": "string",
					"example": "https://localhost/images/offers/myfile-1508310904423.jpg"
				}
			}
		},
		"offerImages1": {
			"properties": {
				"offerImages": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/offerImages"
					}
				}
			}
		},
		"offerp": {
			"properties": {
				"offerDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"offerType": {
					"required": true,
					"type": "string",
					"example": "productName"
				},
				"imageUrl": {
					"required": true,
					"type": "array",
					"items": {
						"example": "images/offers/myfile-1508310904423.jpg"
					}
				}
			}
		},
		"offer": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"offerDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"productName": {
					"required": true,
					"type": "string",
					"example": "productName"
				},
				"offerType": {
					"required": true,
					"type": "string",
					"example": "productName"
				},
				"imageUrl": {
					"required": true,
					"type": "array",
					"items": {
						"example": "images/offers/myfile-1508310904423.jpg"
					}
				},
				"updatedBy": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"createdAt": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				}
			}
		},
		"offerWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/offer"
					}
				}
			}
		},
		"preOrder": {
			"properties": {
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"batchNumber": {
					"required": true,
					"type": "string",
					"example": "batchNumber"
				},
				"availableQuantity": {
					"required": true,
					"type": "double",
					"example": 10.0
				},
				"orderedQuantity": {
					"required": true,
					"type": "double",
					"example": 10.0
				},
				"discount": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"mrp": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"amount": {
					"required": true,
					"type": "double",
					"example": 120.00
				}
			}
		},
		"preOrderData": {
			"properties": {
				"transactionId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"batchNumber": {
					"required": true,
					"type": "string",
					"example": "batchNumber"
				},
				"availableQuantity": {
					"required": true,
					"type": "double",
					"example": 10.0
				},
				"orderedQuantity": {
					"required": true,
					"type": "double",
					"example": 10.0
				},
				"discount": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"mrp": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"amount": {
					"required": true,
					"type": "double",
					"example": 120.00
				}
			}
		},
		"transaction": {
			"properties": {
				"transactionDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"customerId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"dateOfDelivery": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				},
				"preOrders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/preOrder"
					}
				}
			}
		},
		"preOrderDetails": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"transactionId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"transactionNumber": {
					"required": true,
					"type": "string",
					"example": "transactionNumber"
				},
				"productId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"productName": {
					"required": true,
					"type": "string",
					"example": "productName"
				},
				"batchNumber": {
					"required": true,
					"type": "string",
					"example": "batchNumber"
				},
				"availableQuantity": {
					"required": true,
					"type": "double",
					"example": 10.0
				},
				"orderedQuantity": {
					"required": true,
					"type": "double",
					"example": 10.0
				},
				"discount": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"mrp": {
					"required": true,
					"type": "double",
					"example": 100.20
				},
				"amount": {
					"required": true,
					"type": "double",
					"example": 120.00
				}
			}
		},
		"preOrderListData": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/preOrderDetails"
			}
		},
		"transactionDetails": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"transactionNumber": {
					"required": true,
					"type": "string",
					"example": "transactionNumber"
				},
				"transactionDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"customerId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"customerName": {
					"required": true,
					"type": "string",
					"example": "customerName"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"dateOfDelivery": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				},
				"preOrders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/preOrderDetails"
					}
				}
			}
		},
		"transactionData": {
			"properties": {
				"id": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"transactionNumber": {
					"required": true,
					"type": "string",
					"example": "transactionNumber"
				},
				"transactionDate": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"customerId": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"customerName": {
					"required": true,
					"type": "string",
					"example": "customerName"
				},
				"address": {
					"required": true,
					"type": "string",
					"example": "address"
				},
				"dateOfDelivery": {
					"required": true,
					"type": "date",
					"example": "2019-01-02"
				},
				"description": {
					"required": true,
					"type": "string",
					"example": "mg"
				}
			}
		},
		"transactionResponse": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/transactionData"
			}
		},
		"transactionResponseWithPagination": {
			"properties": {
				"count": {
					"required": true,
					"type": "integer",
					"example": 1
				},
				"rows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/transactionData"
					}
				}
			}
		}
	}
}